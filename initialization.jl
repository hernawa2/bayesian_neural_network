#initialization
## def run
# Load training and test data
train=readdlm("train_data_mat.txt");
test=readdlm("test_data_mat.txt");
trainsize=size(train)[1];
testsize=size(test)[1];
topo, train, test, learn_rate=network([5,10,5], train, test, 0.05);
depth=1;
w_size=topo[1]*topo[2]+topo[2]+topo[2]*topo[3]+topo[3];
w=rand(Normal(0, 1), (1,w_size));
w_proposal=rand(Normal(0, 1), (1,w_size));
weight_vec=weight_init(topo);
step_w = 0.25;
step_eta=0.2;
langevin_count=0;
pred_train=evaluate_proposal(train, w, topo, weight_vec);
pred_test=evaluate_proposal(test, w, topo, weight_vec);
y_train = train[:, topo[1]+1: topo[1] + last(topo)];
y_test = test[:, topo[1]+1: topo[1] + last(topo)];
eta=log(var(pred_train-y_train));
tau_pro=exp(eta);
sigma_squared=25;
nu_1=nu_2=0;
sigma_diagmat=zeros((w_size,w_size));
sigma_diagmat[diagind(sigma_diagmat)].=step_w;
delta_likelihood=0.5;
prior_current=prior_likelihood(sigma_squared, nu_1, nu_2, w, tau_pro, topo);
adapt_temp=2;
samples=150000;
likelihood,pred_train,rmsetrain,indi_rmsetrain,maetrain,mapetrain=likelihood_func(train, w, tau_pro, topo, adapt_temp);
_,pred_test,rmsetest,indi_rmsetest,maetest,mapetest=likelihood_func(test, w, tau_pro, topo, adapt_temp);
trainacc=0;
testacc=0;
prop_list=zeros((samples,length(w)));
likeh_list=zeros((samples,2));
likeh_list[1,1:2]=[-100,-100];
surg_likeh_list=zeros((samples,2));
accept_list=zeros(samples);
pos_w=ones((samples,w_size));
lhood_list=zeros((samples,1));
surrogate_list=zeros((samples,1));
fxtrain_samples=ones((samples, trainsize, topo[3]));
fxtest_samples=ones((samples,testsize, topo[3]));
rmse_train=zeros(samples);
indi_rmse_train=zeros((samples,topo[3]));
mae_train=zeros(samples);
mape_train=zeros(samples);
rmse_test=zeros(samples);
indi_rmse_test=zeros((samples,topo[3]));
mae_test=zeros(samples);
mape_test=zeros(samples);
acc_train=zeros(samples);
acc_test=zeros(samples);
num_accepted=0;
langevin_count=0;
l_prob=0.5;
